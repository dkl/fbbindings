convert c:
	#define SDL_VERSION(X) { \
		(X)->major = SDL_MAJOR_VERSION; \
		(X)->minor = SDL_MINOR_VERSION; \
		(X)->patch = SDL_PATCHLEVEL; \
	}
to fb:
	#macro SDL_VERSION(X)
		scope
			(X)->major = SDL_MAJOR_VERSION
			(X)->minor = SDL_MINOR_VERSION
			(X)->patch = SDL_PATCHLEVEL
		end scope
	#endmacro

convert c:
	#define SDL_MIXER_VERSION(X) { \
		(X)->major = SDL_MIXER_MAJOR_VERSION; \
		(X)->minor = SDL_MIXER_MINOR_VERSION; \
		(X)->patch = SDL_MIXER_PATCHLEVEL; \
	}
to fb:
	#macro SDL_MIXER_VERSION(X)
		scope
			(X)->major = SDL_MIXER_MAJOR_VERSION
			(X)->minor = SDL_MIXER_MINOR_VERSION
			(X)->patch = SDL_MIXER_PATCHLEVEL
		end scope
	#endmacro

convert c:
	#define SDL_NET_VERSION(X) { \
		(X)->major = SDL_NET_MAJOR_VERSION; \
		(X)->minor = SDL_NET_MINOR_VERSION; \
		(X)->patch = SDL_NET_PATCHLEVEL; \
	}
to fb:
	#macro SDL_NET_VERSION(X)
		scope
			(X)->major = SDL_NET_MAJOR_VERSION
			(X)->minor = SDL_NET_MINOR_VERSION
			(X)->patch = SDL_NET_PATCHLEVEL
		end scope
	#endmacro

convert c:
	#define SDL_TTF_VERSION(X) { \
		(X)->major = SDL_TTF_MAJOR_VERSION; \
		(X)->minor = SDL_TTF_MINOR_VERSION; \
		(X)->patch = SDL_TTF_PATCHLEVEL; \
	}
to fb:
	#macro SDL_TTF_VERSION(X)
		scope
			(X)->major = SDL_TTF_MAJOR_VERSION
			(X)->minor = SDL_TTF_MINOR_VERSION
			(X)->patch = SDL_TTF_PATCHLEVEL
		end scope
	#endmacro

convert c:
	#define SDL_IMAGE_VERSION(X) { \
		(X)->major = SDL_IMAGE_MAJOR_VERSION; \
		(X)->minor = SDL_IMAGE_MINOR_VERSION; \
		(X)->patch = SDL_IMAGE_PATCHLEVEL; \
	}
to fb:
	#macro SDL_IMAGE_VERSION(X)
		scope
			(X)->major = SDL_IMAGE_MAJOR_VERSION
			(X)->minor = SDL_IMAGE_MINOR_VERSION
			(X)->patch = SDL_IMAGE_PATCHLEVEL
		end scope
	#endmacro

convert c: #define SDL_QuitRequested() (SDL_PumpEvents(), (SDL_PeepEvents(NULL, 0, SDL_PEEKEVENT, SDL_QUIT, SDL_QUIT) > 0))
to fb:
	private function SDL_QuitRequested() as SDL_bool
		SDL_PumpEvents()
		function = (SDL_PeepEvents(NULL, 0, SDL_PEEKEVENT, SDL_QUIT, SDL_QUIT) > 0)
	end function
