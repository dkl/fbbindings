#pragma once

extern "C"

extern GUID_DEVINTERFACE_DISK as const GUID
extern GUID_DEVINTERFACE_CDROM as const GUID
extern GUID_DEVINTERFACE_PARTITION as const GUID
extern GUID_DEVINTERFACE_TAPE as const GUID
extern GUID_DEVINTERFACE_WRITEONCEDISK as const GUID
extern GUID_DEVINTERFACE_VOLUME as const GUID
extern GUID_DEVINTERFACE_MEDIUMCHANGER as const GUID
extern GUID_DEVINTERFACE_FLOPPY as const GUID
extern GUID_DEVINTERFACE_CDCHANGER as const GUID
extern GUID_DEVINTERFACE_STORAGEPORT as const GUID
extern GUID_DEVINTERFACE_COMPORT as const GUID
extern GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR as const GUID

#define DiskClassGuid GUID_DEVINTERFACE_DISK
#define CdRomClassGuid GUID_DEVINTERFACE_CDROM
#define PartitionClassGuid GUID_DEVINTERFACE_PARTITION
#define TapeClassGuid GUID_DEVINTERFACE_TAPE
#define WriteOnceDiskClassGuid GUID_DEVINTERFACE_WRITEONCEDISK
#define VolumeClassGuid GUID_DEVINTERFACE_VOLUME
#define MediumChangerClassGuid GUID_DEVINTERFACE_MEDIUMCHANGER
#define FloppyClassGuid GUID_DEVINTERFACE_FLOPPY
#define CdChangerClassGuid GUID_DEVINTERFACE_CDCHANGER
#define StoragePortClassGuid GUID_DEVINTERFACE_STORAGEPORT
#define GUID_CLASS_COMPORT GUID_DEVINTERFACE_COMPORT
#define GUID_SERENUM_BUS_ENUMERATOR GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR
#define _WINIOCTL_
#define _DEVIOCTL_
#define DEVICE_TYPE DWORD
#define FILE_DEVICE_BEEP &h00000001
#define FILE_DEVICE_CD_ROM &h00000002
#define FILE_DEVICE_CD_ROM_FILE_SYSTEM &h00000003
#define FILE_DEVICE_CONTROLLER &h00000004
#define FILE_DEVICE_DATALINK &h00000005
#define FILE_DEVICE_DFS &h00000006
#define FILE_DEVICE_DISK &h00000007
#define FILE_DEVICE_DISK_FILE_SYSTEM &h00000008
#define FILE_DEVICE_FILE_SYSTEM &h00000009
#define FILE_DEVICE_INPORT_PORT &h0000000a
#define FILE_DEVICE_KEYBOARD &h0000000b
#define FILE_DEVICE_MAILSLOT &h0000000c
#define FILE_DEVICE_MIDI_IN &h0000000d
#define FILE_DEVICE_MIDI_OUT &h0000000e
#define FILE_DEVICE_MOUSE &h0000000f
#define FILE_DEVICE_MULTI_UNC_PROVIDER &h00000010
#define FILE_DEVICE_NAMED_PIPE &h00000011
#define FILE_DEVICE_NETWORK &h00000012
#define FILE_DEVICE_NETWORK_BROWSER &h00000013
#define FILE_DEVICE_NETWORK_FILE_SYSTEM &h00000014
#define FILE_DEVICE_NULL &h00000015
#define FILE_DEVICE_PARALLEL_PORT &h00000016
#define FILE_DEVICE_PHYSICAL_NETCARD &h00000017
#define FILE_DEVICE_PRINTER &h00000018
#define FILE_DEVICE_SCANNER &h00000019
#define FILE_DEVICE_SERIAL_MOUSE_PORT &h0000001a
#define FILE_DEVICE_SERIAL_PORT &h0000001b
#define FILE_DEVICE_SCREEN &h0000001c
#define FILE_DEVICE_SOUND &h0000001d
#define FILE_DEVICE_STREAMS &h0000001e
#define FILE_DEVICE_TAPE &h0000001f
#define FILE_DEVICE_TAPE_FILE_SYSTEM &h00000020
#define FILE_DEVICE_TRANSPORT &h00000021
#define FILE_DEVICE_UNKNOWN &h00000022
#define FILE_DEVICE_VIDEO &h00000023
#define FILE_DEVICE_VIRTUAL_DISK &h00000024
#define FILE_DEVICE_WAVE_IN &h00000025
#define FILE_DEVICE_WAVE_OUT &h00000026
#define FILE_DEVICE_8042_PORT &h00000027
#define FILE_DEVICE_NETWORK_REDIRECTOR &h00000028
#define FILE_DEVICE_BATTERY &h00000029
#define FILE_DEVICE_BUS_EXTENDER &h0000002a
#define FILE_DEVICE_MODEM &h0000002b
#define FILE_DEVICE_VDM &h0000002c
#define FILE_DEVICE_MASS_STORAGE &h0000002d
#define FILE_DEVICE_SMB &h0000002e
#define FILE_DEVICE_KS &h0000002f
#define FILE_DEVICE_CHANGER &h00000030
#define FILE_DEVICE_SMARTCARD &h00000031
#define FILE_DEVICE_ACPI &h00000032
#define FILE_DEVICE_DVD &h00000033
#define FILE_DEVICE_FULLSCREEN_VIDEO &h00000034
#define FILE_DEVICE_DFS_FILE_SYSTEM &h00000035
#define FILE_DEVICE_DFS_VOLUME &h00000036
#define FILE_DEVICE_SERENUM &h00000037
#define FILE_DEVICE_TERMSRV &h00000038
#define FILE_DEVICE_KSEC &h00000039
#define FILE_DEVICE_FIPS &h0000003A
#define FILE_DEVICE_INFINIBAND &h0000003B
#define CTL_CODE(DeviceType, Function, Method, Access) (((((DeviceType) shl 16) or ((Access) shl 14)) or ((Function) shl 2)) or (Method))
#define DEVICE_TYPE_FROM_CTL_CODE(ctrlCode) (cast(DWORD, ctrlCode and &hffff0000) shr 16)
#define METHOD_BUFFERED 0
#define METHOD_IN_DIRECT 1
#define METHOD_OUT_DIRECT 2
#define METHOD_NEITHER 3
#define METHOD_DIRECT_TO_HARDWARE METHOD_IN_DIRECT
#define METHOD_DIRECT_FROM_HARDWARE METHOD_OUT_DIRECT
#define FILE_ANY_ACCESS 0
#define FILE_SPECIAL_ACCESS FILE_ANY_ACCESS
#define FILE_READ_ACCESS &h0001
#define FILE_WRITE_ACCESS &h0002
#define _NTDDSTOR_H_
#define IOCTL_STORAGE_BASE FILE_DEVICE_MASS_STORAGE
#define IOCTL_STORAGE_CHECK_VERIFY CTL_CODE(IOCTL_STORAGE_BASE, &h0200, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_CHECK_VERIFY2 CTL_CODE(IOCTL_STORAGE_BASE, &h0200, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_MEDIA_REMOVAL CTL_CODE(IOCTL_STORAGE_BASE, &h0201, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_EJECT_MEDIA CTL_CODE(IOCTL_STORAGE_BASE, &h0202, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_LOAD_MEDIA CTL_CODE(IOCTL_STORAGE_BASE, &h0203, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_LOAD_MEDIA2 CTL_CODE(IOCTL_STORAGE_BASE, &h0203, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_RESERVE CTL_CODE(IOCTL_STORAGE_BASE, &h0204, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_RELEASE CTL_CODE(IOCTL_STORAGE_BASE, &h0205, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_FIND_NEW_DEVICES CTL_CODE(IOCTL_STORAGE_BASE, &h0206, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_EJECTION_CONTROL CTL_CODE(IOCTL_STORAGE_BASE, &h0250, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_MCN_CONTROL CTL_CODE(IOCTL_STORAGE_BASE, &h0251, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_GET_MEDIA_TYPES CTL_CODE(IOCTL_STORAGE_BASE, &h0300, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_GET_MEDIA_TYPES_EX CTL_CODE(IOCTL_STORAGE_BASE, &h0301, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER CTL_CODE(IOCTL_STORAGE_BASE, &h0304, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_GET_HOTPLUG_INFO CTL_CODE(IOCTL_STORAGE_BASE, &h0305, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_SET_HOTPLUG_INFO CTL_CODE(IOCTL_STORAGE_BASE, &h0306, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_STORAGE_RESET_BUS CTL_CODE(IOCTL_STORAGE_BASE, &h0400, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_RESET_DEVICE CTL_CODE(IOCTL_STORAGE_BASE, &h0401, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_BREAK_RESERVATION CTL_CODE(IOCTL_STORAGE_BASE, &h0405, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_STORAGE_GET_DEVICE_NUMBER CTL_CODE(IOCTL_STORAGE_BASE, &h0420, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_PREDICT_FAILURE CTL_CODE(IOCTL_STORAGE_BASE, &h0440, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_READ_CAPACITY CTL_CODE(IOCTL_STORAGE_BASE, &h0450, METHOD_BUFFERED, FILE_READ_ACCESS)
#define OBSOLETE_IOCTL_STORAGE_RESET_BUS CTL_CODE(IOCTL_STORAGE_BASE, &h0400, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define OBSOLETE_IOCTL_STORAGE_RESET_DEVICE CTL_CODE(IOCTL_STORAGE_BASE, &h0401, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)

type _STORAGE_HOTPLUG_INFO
	Size as DWORD
	MediaRemovable as BOOLEAN
	MediaHotplug as BOOLEAN
	DeviceHotplug as BOOLEAN
	WriteCacheEnableOverride as BOOLEAN
end type

type STORAGE_HOTPLUG_INFO as _STORAGE_HOTPLUG_INFO
type PSTORAGE_HOTPLUG_INFO as _STORAGE_HOTPLUG_INFO ptr

type _STORAGE_DEVICE_NUMBER
	DeviceType as DWORD
	DeviceNumber as DWORD
	PartitionNumber as DWORD
end type

type STORAGE_DEVICE_NUMBER as _STORAGE_DEVICE_NUMBER
type PSTORAGE_DEVICE_NUMBER as _STORAGE_DEVICE_NUMBER ptr

type _STORAGE_BUS_RESET_REQUEST
	PathId as BYTE
end type

type STORAGE_BUS_RESET_REQUEST as _STORAGE_BUS_RESET_REQUEST
type PSTORAGE_BUS_RESET_REQUEST as _STORAGE_BUS_RESET_REQUEST ptr

type STORAGE_BREAK_RESERVATION_REQUEST
	Length as DWORD
	_unused as BYTE
	PathId as BYTE
	TargetId as BYTE
	Lun as BYTE
end type

type PSTORAGE_BREAK_RESERVATION_REQUEST as STORAGE_BREAK_RESERVATION_REQUEST ptr

type _PREVENT_MEDIA_REMOVAL
	PreventMediaRemoval as BOOLEAN
end type

type PREVENT_MEDIA_REMOVAL as _PREVENT_MEDIA_REMOVAL
type PPREVENT_MEDIA_REMOVAL as _PREVENT_MEDIA_REMOVAL ptr

type _CLASS_MEDIA_CHANGE_CONTEXT
	MediaChangeCount as DWORD
	NewState as DWORD
end type

type CLASS_MEDIA_CHANGE_CONTEXT as _CLASS_MEDIA_CHANGE_CONTEXT
type PCLASS_MEDIA_CHANGE_CONTEXT as _CLASS_MEDIA_CHANGE_CONTEXT ptr

type _TAPE_STATISTICS
	Version as DWORD
	Flags as DWORD
	RecoveredWrites as LARGE_INTEGER
	UnrecoveredWrites as LARGE_INTEGER
	RecoveredReads as LARGE_INTEGER
	UnrecoveredReads as LARGE_INTEGER
	CompressionRatioReads as BYTE
	CompressionRatioWrites as BYTE
end type

type TAPE_STATISTICS as _TAPE_STATISTICS
type PTAPE_STATISTICS as _TAPE_STATISTICS ptr

#define RECOVERED_WRITES_VALID &h00000001
#define UNRECOVERED_WRITES_VALID &h00000002
#define RECOVERED_READS_VALID &h00000004
#define UNRECOVERED_READS_VALID &h00000008
#define WRITE_COMPRESSION_INFO_VALID &h00000010
#define READ_COMPRESSION_INFO_VALID &h00000020

type _TAPE_GET_STATISTICS
	Operation as DWORD
end type

type TAPE_GET_STATISTICS as _TAPE_GET_STATISTICS
type PTAPE_GET_STATISTICS as _TAPE_GET_STATISTICS ptr

#define TAPE_RETURN_STATISTICS __MSABI_LONG(0)
#define TAPE_RETURN_ENV_INFO __MSABI_LONG(1)
#define TAPE_RESET_STATISTICS __MSABI_LONG(2)

type _STORAGE_MEDIA_TYPE as long
enum
	DDS_4mm = &h20
	MiniQic
	Travan
	QIC
	MP_8mm
	AME_8mm
	AIT1_8mm
	DLT
	NCTP
	IBM_3480
	IBM_3490E
	IBM_Magstar_3590
	IBM_Magstar_MP
	STK_DATA_D3
	SONY_DTF
	DV_6mm
	DMI
	SONY_D2
	CLEANER_CARTRIDGE
	CD_ROM
	CD_R
	CD_RW
	DVD_ROM
	DVD_R
	DVD_RW
	MO_3_RW
	MO_5_WO
	MO_5_RW
	MO_5_LIMDOW
	PC_5_WO
	PC_5_RW
	PD_5_RW
	ABL_5_WO
	PINNACLE_APEX_5_RW
	SONY_12_WO
	PHILIPS_12_WO
	HITACHI_12_WO
	CYGNET_12_WO
	KODAK_14_WO
	MO_NFR_525
	NIKON_12_RW
	IOMEGA_ZIP
	IOMEGA_JAZ
	SYQUEST_EZ135
	SYQUEST_EZFLYER
	SYQUEST_SYJET
	AVATAR_F2
	MP2_8mm
	DST_S
	DST_M
	DST_L
	VXATape_1
	VXATape_2
	STK_9840
	LTO_Ultrium
	LTO_Accelis
	DVD_RAM
	AIT_8mm
	ADR_1
	ADR_2
	STK_9940
	SAIT
	VXATape
end enum

type STORAGE_MEDIA_TYPE as _STORAGE_MEDIA_TYPE
type PSTORAGE_MEDIA_TYPE as _STORAGE_MEDIA_TYPE ptr

#define MEDIA_ERASEABLE &h00000001
#define MEDIA_WRITE_ONCE &h00000002
#define MEDIA_READ_ONLY &h00000004
#define MEDIA_READ_WRITE &h00000008
#define MEDIA_WRITE_PROTECTED &h00000100
#define MEDIA_CURRENTLY_MOUNTED &h80000000

type _STORAGE_BUS_TYPE as long
enum
	BusTypeUnknown = &h00
	BusTypeScsi = &h1
	BusTypeAtapi = &h2
	BusTypeAta = &h3
	BusType1394 = &h4
	BusTypeSsa = &h5
	BusTypeFibre = &h6
	BusTypeUsb = &h7
	BusTypeRAID = &h8
	BusTypeMax
	BusTypeMaxReserved = &h7F
end enum

type STORAGE_BUS_TYPE as _STORAGE_BUS_TYPE
type PSTORAGE_BUS_TYPE as _STORAGE_BUS_TYPE ptr

type ___DEVICE_MEDIA_INFO_DiskInfo
	Cylinders as LARGE_INTEGER
	MediaType as STORAGE_MEDIA_TYPE
	TracksPerCylinder as DWORD
	SectorsPerTrack as DWORD
	BytesPerSector as DWORD
	NumberMediaSides as DWORD
	MediaCharacteristics as DWORD
end type

type ___DEVICE_MEDIA_INFO_RemovableDiskInfo
	Cylinders as LARGE_INTEGER
	MediaType as STORAGE_MEDIA_TYPE
	TracksPerCylinder as DWORD
	SectorsPerTrack as DWORD
	BytesPerSector as DWORD
	NumberMediaSides as DWORD
	MediaCharacteristics as DWORD
end type

type ___DEVICE_MEDIA_INFO_ScsiInformation
	MediumType as BYTE
	DensityCode as BYTE
end type

union ___DEVICE_MEDIA_INFO_BusSpecificData
	ScsiInformation as ___DEVICE_MEDIA_INFO_ScsiInformation
end union

type ___DEVICE_MEDIA_INFO_TapeInfo
	MediaType as STORAGE_MEDIA_TYPE
	MediaCharacteristics as DWORD
	CurrentBlockSize as DWORD
	BusType as STORAGE_BUS_TYPE
	BusSpecificData as ___DEVICE_MEDIA_INFO_BusSpecificData
end type

union ___DEVICE_MEDIA_INFO_DeviceSpecific
	DiskInfo as ___DEVICE_MEDIA_INFO_DiskInfo
	RemovableDiskInfo as ___DEVICE_MEDIA_INFO_RemovableDiskInfo
	TapeInfo as ___DEVICE_MEDIA_INFO_TapeInfo
end union

type _DEVICE_MEDIA_INFO
	DeviceSpecific as ___DEVICE_MEDIA_INFO_DeviceSpecific
end type

type DEVICE_MEDIA_INFO as _DEVICE_MEDIA_INFO
type PDEVICE_MEDIA_INFO as _DEVICE_MEDIA_INFO ptr

type _GET_MEDIA_TYPES
	DeviceType as DWORD
	MediaInfoCount as DWORD
	MediaInfo(0 to 0) as DEVICE_MEDIA_INFO
end type

type GET_MEDIA_TYPES as _GET_MEDIA_TYPES
type PGET_MEDIA_TYPES as _GET_MEDIA_TYPES ptr

type _STORAGE_PREDICT_FAILURE
	PredictFailure as DWORD
	VendorSpecific(0 to 511) as BYTE
end type

type STORAGE_PREDICT_FAILURE as _STORAGE_PREDICT_FAILURE
type PSTORAGE_PREDICT_FAILURE as _STORAGE_PREDICT_FAILURE ptr

#define _NTDDDISK_H_
#define IOCTL_DISK_BASE FILE_DEVICE_DISK
#define IOCTL_DISK_GET_DRIVE_GEOMETRY CTL_CODE(IOCTL_DISK_BASE, &h0000, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_GET_PARTITION_INFO CTL_CODE(IOCTL_DISK_BASE, &h0001, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_SET_PARTITION_INFO CTL_CODE(IOCTL_DISK_BASE, &h0002, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_GET_DRIVE_LAYOUT CTL_CODE(IOCTL_DISK_BASE, &h0003, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_SET_DRIVE_LAYOUT CTL_CODE(IOCTL_DISK_BASE, &h0004, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_VERIFY CTL_CODE(IOCTL_DISK_BASE, &h0005, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_FORMAT_TRACKS CTL_CODE(IOCTL_DISK_BASE, &h0006, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_REASSIGN_BLOCKS CTL_CODE(IOCTL_DISK_BASE, &h0007, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_PERFORMANCE CTL_CODE(IOCTL_DISK_BASE, &h0008, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_IS_WRITABLE CTL_CODE(IOCTL_DISK_BASE, &h0009, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_LOGGING CTL_CODE(IOCTL_DISK_BASE, &h000a, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_FORMAT_TRACKS_EX CTL_CODE(IOCTL_DISK_BASE, &h000b, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_HISTOGRAM_STRUCTURE CTL_CODE(IOCTL_DISK_BASE, &h000c, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_HISTOGRAM_DATA CTL_CODE(IOCTL_DISK_BASE, &h000d, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_HISTOGRAM_RESET CTL_CODE(IOCTL_DISK_BASE, &h000e, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_REQUEST_STRUCTURE CTL_CODE(IOCTL_DISK_BASE, &h000f, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_REQUEST_DATA CTL_CODE(IOCTL_DISK_BASE, &h0010, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_PERFORMANCE_OFF CTL_CODE(IOCTL_DISK_BASE, &h0018, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_CONTROLLER_NUMBER CTL_CODE(IOCTL_DISK_BASE, &h0011, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define SMART_GET_VERSION CTL_CODE(IOCTL_DISK_BASE, &h0020, METHOD_BUFFERED, FILE_READ_ACCESS)
#define SMART_SEND_DRIVE_COMMAND CTL_CODE(IOCTL_DISK_BASE, &h0021, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define SMART_RCV_DRIVE_DATA CTL_CODE(IOCTL_DISK_BASE, &h0022, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_GET_PARTITION_INFO_EX CTL_CODE(IOCTL_DISK_BASE, &h0012, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_SET_PARTITION_INFO_EX CTL_CODE(IOCTL_DISK_BASE, &h0013, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_GET_DRIVE_LAYOUT_EX CTL_CODE(IOCTL_DISK_BASE, &h0014, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_SET_DRIVE_LAYOUT_EX CTL_CODE(IOCTL_DISK_BASE, &h0015, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_CREATE_DISK CTL_CODE(IOCTL_DISK_BASE, &h0016, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_GET_LENGTH_INFO CTL_CODE(IOCTL_DISK_BASE, &h0017, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_GET_DRIVE_GEOMETRY_EX CTL_CODE(IOCTL_DISK_BASE, &h0028, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_REASSIGN_BLOCKS_EX CTL_CODE(IOCTL_DISK_BASE, &h0029, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_UPDATE_DRIVE_SIZE CTL_CODE(IOCTL_DISK_BASE, &h0032, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_GROW_PARTITION CTL_CODE(IOCTL_DISK_BASE, &h0034, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_GET_CACHE_INFORMATION CTL_CODE(IOCTL_DISK_BASE, &h0035, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_SET_CACHE_INFORMATION CTL_CODE(IOCTL_DISK_BASE, &h0036, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define OBSOLETE_DISK_GET_WRITE_CACHE_STATE CTL_CODE(IOCTL_DISK_BASE, &h0037, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_DELETE_DRIVE_LAYOUT CTL_CODE(IOCTL_DISK_BASE, &h0040, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_UPDATE_PROPERTIES CTL_CODE(IOCTL_DISK_BASE, &h0050, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_RESET_SNAPSHOT_INFO CTL_CODE(IOCTL_DISK_BASE, &h0084, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_FORMAT_DRIVE CTL_CODE(IOCTL_DISK_BASE, &h00f3, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_DISK_SENSE_DEVICE CTL_CODE(IOCTL_DISK_BASE, &h00f8, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISK_CHECK_VERIFY CTL_CODE(IOCTL_DISK_BASE, &h0200, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_MEDIA_REMOVAL CTL_CODE(IOCTL_DISK_BASE, &h0201, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_EJECT_MEDIA CTL_CODE(IOCTL_DISK_BASE, &h0202, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_LOAD_MEDIA CTL_CODE(IOCTL_DISK_BASE, &h0203, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_RESERVE CTL_CODE(IOCTL_DISK_BASE, &h0204, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_RELEASE CTL_CODE(IOCTL_DISK_BASE, &h0205, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_FIND_NEW_DEVICES CTL_CODE(IOCTL_DISK_BASE, &h0206, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_DISK_GET_MEDIA_TYPES CTL_CODE(IOCTL_DISK_BASE, &h0300, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_STORAGE_QUERY_PROPERTY CTL_CODE(IOCTL_STORAGE_BASE, &h0500, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define PARTITION_ENTRY_UNUSED &h00
#define PARTITION_FAT_12 &h01
#define PARTITION_XENIX_1 &h02
#define PARTITION_XENIX_2 &h03
#define PARTITION_FAT_16 &h04
#define PARTITION_EXTENDED &h05
#define PARTITION_HUGE &h06
#define PARTITION_IFS &h07
#define PARTITION_OS2BOOTMGR &h0A
#define PARTITION_FAT32 &h0B
#define PARTITION_FAT32_XINT13 &h0C
#define PARTITION_XINT13 &h0E
#define PARTITION_XINT13_EXTENDED &h0F
#define PARTITION_PREP &h41
#define PARTITION_LDM &h42
#define PARTITION_UNIX &h63
#define VALID_NTFT &hC0
#define PARTITION_NTFT &h80
#define IsRecognizedPartition(PartitionType) ((((((((((((((PartitionType and PARTITION_NTFT) andalso ((PartitionType and (not &hC0)) = PARTITION_FAT_12)) orelse ((PartitionType and PARTITION_NTFT) andalso ((PartitionType and (not &hC0)) = PARTITION_IFS))) orelse ((PartitionType and PARTITION_NTFT) andalso ((PartitionType and (not &hC0)) = PARTITION_HUGE))) orelse ((PartitionType and PARTITION_NTFT) andalso ((PartitionType and (not &hC0)) = PARTITION_FAT32))) orelse ((PartitionType and PARTITION_NTFT) andalso ((PartitionType and (not &hC0)) = PARTITION_FAT32_XINT13))) orelse ((PartitionType and PARTITION_NTFT) andalso ((PartitionType and (not &hC0)) = PARTITION_XINT13))) orelse ((PartitionType) = PARTITION_FAT_12)) orelse ((PartitionType) = PARTITION_FAT_16)) orelse ((PartitionType) = PARTITION_IFS)) orelse ((PartitionType) = PARTITION_HUGE)) orelse ((PartitionType) = PARTITION_FAT32)) orelse ((PartitionType) = PARTITION_FAT32_XINT13)) orelse ((PartitionType) = PARTITION_XINT13))
#define IsContainerPartition(PartitionType) ((PartitionType = PARTITION_EXTENDED) orelse (PartitionType = PARTITION_XINT13_EXTENDED))
#define IsFTPartition(PartitionType) (((PartitionType) and PARTITION_NTFT) andalso IsRecognizedPartition(PartitionType))

type _MEDIA_TYPE as long
enum
	Unknown
	F5_1Pt2_512
	F3_1Pt44_512
	F3_2Pt88_512
	F3_20Pt8_512
	F3_720_512
	F5_360_512
	F5_320_512
	F5_320_1024
	F5_180_512
	F5_160_512
	RemovableMedia
	FixedMedia
	F3_120M_512
	F3_640_512
	F5_640_512
	F5_720_512
	F3_1Pt2_512
	F3_1Pt23_1024
	F5_1Pt23_1024
	F3_128Mb_512
	F3_230Mb_512
	F8_256_128
	F3_200Mb_512
	F3_240M_512
	F3_32M_512
end enum

type MEDIA_TYPE as _MEDIA_TYPE
type PMEDIA_TYPE as _MEDIA_TYPE ptr

type _FORMAT_PARAMETERS
	MediaType as MEDIA_TYPE
	StartCylinderNumber as DWORD
	EndCylinderNumber as DWORD
	StartHeadNumber as DWORD
	EndHeadNumber as DWORD
end type

type FORMAT_PARAMETERS as _FORMAT_PARAMETERS
type PFORMAT_PARAMETERS as _FORMAT_PARAMETERS ptr
type BAD_TRACK_NUMBER as WORD
type PBAD_TRACK_NUMBER as WORD ptr

type _FORMAT_EX_PARAMETERS
	MediaType as MEDIA_TYPE
	StartCylinderNumber as DWORD
	EndCylinderNumber as DWORD
	StartHeadNumber as DWORD
	EndHeadNumber as DWORD
	FormatGapLength as WORD
	SectorsPerTrack as WORD
	SectorNumber(0 to 0) as WORD
end type

type FORMAT_EX_PARAMETERS as _FORMAT_EX_PARAMETERS
type PFORMAT_EX_PARAMETERS as _FORMAT_EX_PARAMETERS ptr

type _DISK_GEOMETRY
	Cylinders as LARGE_INTEGER
	MediaType as MEDIA_TYPE
	TracksPerCylinder as DWORD
	SectorsPerTrack as DWORD
	BytesPerSector as DWORD
end type

type DISK_GEOMETRY as _DISK_GEOMETRY
type PDISK_GEOMETRY as _DISK_GEOMETRY ptr

#define WMI_DISK_GEOMETRY_GUID (&h25007f51, &h57c2, &h11d1, (&ha5, &h28, &h0, &ha0, &hc9, &h6, &h29, &h10))

type _PARTITION_INFORMATION
	StartingOffset as LARGE_INTEGER
	PartitionLength as LARGE_INTEGER
	HiddenSectors as DWORD
	PartitionNumber as DWORD
	PartitionType as BYTE
	BootIndicator as BOOLEAN
	RecognizedPartition as BOOLEAN
	RewritePartition as BOOLEAN
end type

type PARTITION_INFORMATION as _PARTITION_INFORMATION
type PPARTITION_INFORMATION as _PARTITION_INFORMATION ptr

type _SET_PARTITION_INFORMATION
	PartitionType as BYTE
end type

type SET_PARTITION_INFORMATION as _SET_PARTITION_INFORMATION
type PSET_PARTITION_INFORMATION as _SET_PARTITION_INFORMATION ptr

type _DRIVE_LAYOUT_INFORMATION
	PartitionCount as DWORD
	Signature as DWORD
	PartitionEntry(0 to 0) as PARTITION_INFORMATION
end type

type DRIVE_LAYOUT_INFORMATION as _DRIVE_LAYOUT_INFORMATION
type PDRIVE_LAYOUT_INFORMATION as _DRIVE_LAYOUT_INFORMATION ptr

type _VERIFY_INFORMATION
	StartingOffset as LARGE_INTEGER
	Length as DWORD
end type

type VERIFY_INFORMATION as _VERIFY_INFORMATION
type PVERIFY_INFORMATION as _VERIFY_INFORMATION ptr

type _REASSIGN_BLOCKS
	Reserved as WORD
	Count as WORD
	BlockNumber(0 to 0) as DWORD
end type

type REASSIGN_BLOCKS as _REASSIGN_BLOCKS
type PREASSIGN_BLOCKS as _REASSIGN_BLOCKS ptr

type _REASSIGN_BLOCKS_EX field = 1
	Reserved as WORD
	Count as WORD
	BlockNumber(0 to 0) as LARGE_INTEGER
end type

type REASSIGN_BLOCKS_EX as _REASSIGN_BLOCKS_EX
type PREASSIGN_BLOCKS_EX as _REASSIGN_BLOCKS_EX ptr

type _PARTITION_STYLE as long
enum
	PARTITION_STYLE_MBR
	PARTITION_STYLE_GPT
	PARTITION_STYLE_RAW
end enum

type PARTITION_STYLE as _PARTITION_STYLE

type _PARTITION_INFORMATION_GPT
	PartitionType as GUID
	PartitionId as GUID
	Attributes as DWORD64
	Name(0 to 35) as WCHAR
end type

type PARTITION_INFORMATION_GPT as _PARTITION_INFORMATION_GPT
type PPARTITION_INFORMATION_GPT as _PARTITION_INFORMATION_GPT ptr

#define GPT_ATTRIBUTE_PLATFORM_REQUIRED &h0000000000000001
#define GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER &h8000000000000000
#define GPT_BASIC_DATA_ATTRIBUTE_HIDDEN &h4000000000000000
#define GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY &h2000000000000000
#define GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY &h1000000000000000

type _PARTITION_INFORMATION_MBR
	PartitionType as BYTE
	BootIndicator as BOOLEAN
	RecognizedPartition as BOOLEAN
	HiddenSectors as DWORD
end type

type PARTITION_INFORMATION_MBR as _PARTITION_INFORMATION_MBR
type PPARTITION_INFORMATION_MBR as _PARTITION_INFORMATION_MBR ptr
type SET_PARTITION_INFORMATION_MBR as SET_PARTITION_INFORMATION
type SET_PARTITION_INFORMATION_GPT as PARTITION_INFORMATION_GPT

type _SET_PARTITION_INFORMATION_EX
	PartitionStyle as PARTITION_STYLE

	union
		Mbr as SET_PARTITION_INFORMATION_MBR
		Gpt as SET_PARTITION_INFORMATION_GPT
	end union
end type

type SET_PARTITION_INFORMATION_EX as _SET_PARTITION_INFORMATION_EX
type PSET_PARTITION_INFORMATION_EX as _SET_PARTITION_INFORMATION_EX ptr

type _CREATE_DISK_GPT
	DiskId as GUID
	MaxPartitionCount as DWORD
end type

type CREATE_DISK_GPT as _CREATE_DISK_GPT
type PCREATE_DISK_GPT as _CREATE_DISK_GPT ptr

type _CREATE_DISK_MBR
	Signature as DWORD
end type

type CREATE_DISK_MBR as _CREATE_DISK_MBR
type PCREATE_DISK_MBR as _CREATE_DISK_MBR ptr

type _CREATE_DISK
	PartitionStyle as PARTITION_STYLE

	union
		Mbr as CREATE_DISK_MBR
		Gpt as CREATE_DISK_GPT
	end union
end type

type CREATE_DISK as _CREATE_DISK
type PCREATE_DISK as _CREATE_DISK ptr

type _GET_LENGTH_INFORMATION
	Length as LARGE_INTEGER
end type

type GET_LENGTH_INFORMATION as _GET_LENGTH_INFORMATION
type PGET_LENGTH_INFORMATION as _GET_LENGTH_INFORMATION ptr

type _PARTITION_INFORMATION_EX
	PartitionStyle as PARTITION_STYLE
	StartingOffset as LARGE_INTEGER
	PartitionLength as LARGE_INTEGER
	PartitionNumber as DWORD
	RewritePartition as BOOLEAN

	union
		Mbr as PARTITION_INFORMATION_MBR
		Gpt as PARTITION_INFORMATION_GPT
	end union
end type

type PARTITION_INFORMATION_EX as _PARTITION_INFORMATION_EX
type PPARTITION_INFORMATION_EX as _PARTITION_INFORMATION_EX ptr

type _DRIVE_LAYOUT_INFORMATION_GPT
	DiskId as GUID
	StartingUsableOffset as LARGE_INTEGER
	UsableLength as LARGE_INTEGER
	MaxPartitionCount as DWORD
end type

type DRIVE_LAYOUT_INFORMATION_GPT as _DRIVE_LAYOUT_INFORMATION_GPT
type PDRIVE_LAYOUT_INFORMATION_GPT as _DRIVE_LAYOUT_INFORMATION_GPT ptr

type _DRIVE_LAYOUT_INFORMATION_MBR
	Signature as DWORD
end type

type DRIVE_LAYOUT_INFORMATION_MBR as _DRIVE_LAYOUT_INFORMATION_MBR
type PDRIVE_LAYOUT_INFORMATION_MBR as _DRIVE_LAYOUT_INFORMATION_MBR ptr

type _DRIVE_LAYOUT_INFORMATION_EX
	PartitionStyle as DWORD
	PartitionCount as DWORD

	union
		Mbr as DRIVE_LAYOUT_INFORMATION_MBR
		Gpt as DRIVE_LAYOUT_INFORMATION_GPT
	end union

	PartitionEntry(0 to 0) as PARTITION_INFORMATION_EX
end type

type DRIVE_LAYOUT_INFORMATION_EX as _DRIVE_LAYOUT_INFORMATION_EX
type PDRIVE_LAYOUT_INFORMATION_EX as _DRIVE_LAYOUT_INFORMATION_EX ptr

type _DETECTION_TYPE as long
enum
	DetectNone
	DetectInt13
	DetectExInt13
end enum

type DETECTION_TYPE as _DETECTION_TYPE

type _DISK_INT13_INFO
	DriveSelect as WORD
	MaxCylinders as DWORD
	SectorsPerTrack as WORD
	MaxHeads as WORD
	NumberDrives as WORD
end type

type DISK_INT13_INFO as _DISK_INT13_INFO
type PDISK_INT13_INFO as _DISK_INT13_INFO ptr

type _DISK_EX_INT13_INFO
	ExBufferSize as WORD
	ExFlags as WORD
	ExCylinders as DWORD
	ExHeads as DWORD
	ExSectorsPerTrack as DWORD
	ExSectorsPerDrive as DWORD64
	ExSectorSize as WORD
	ExReserved as WORD
end type

type DISK_EX_INT13_INFO as _DISK_EX_INT13_INFO
type PDISK_EX_INT13_INFO as _DISK_EX_INT13_INFO ptr

type _DISK_DETECTION_INFO
	SizeOfDetectInfo as DWORD
	DetectionType as DETECTION_TYPE

	union
		type
			Int13 as DISK_INT13_INFO
			ExInt13 as DISK_EX_INT13_INFO
		end type
	end union
end type

type DISK_DETECTION_INFO as _DISK_DETECTION_INFO
type PDISK_DETECTION_INFO as _DISK_DETECTION_INFO ptr

type ___DISK_PARTITION_INFO_Mbr
	Signature as DWORD
	CheckSum as DWORD
end type

type ___DISK_PARTITION_INFO_Gpt
	DiskId as GUID
end type

type _DISK_PARTITION_INFO
	SizeOfPartitionInfo as DWORD
	PartitionStyle as PARTITION_STYLE

	union
		Mbr as ___DISK_PARTITION_INFO_Mbr
		Gpt as ___DISK_PARTITION_INFO_Gpt
	end union
end type

type DISK_PARTITION_INFO as _DISK_PARTITION_INFO
type PDISK_PARTITION_INFO as _DISK_PARTITION_INFO ptr

#define DiskGeometryGetPartition(Geometry) cast(PDISK_PARTITION_INFO, (Geometry)->Data)
#define DiskGeometryGetDetect(Geometry) cast(PDISK_DETECTION_INFO, cast(DWORD_PTR, DiskGeometryGetPartition(Geometry) + DiskGeometryGetPartition(Geometry)->SizeOfPartitionInfo))

type _DISK_GEOMETRY_EX
	Geometry as DISK_GEOMETRY
	DiskSize as LARGE_INTEGER
	Data(0 to 0) as BYTE
end type

type DISK_GEOMETRY_EX as _DISK_GEOMETRY_EX
type PDISK_GEOMETRY_EX as _DISK_GEOMETRY_EX ptr

type _DISK_CONTROLLER_NUMBER
	ControllerNumber as DWORD
	DiskNumber as DWORD
end type

type DISK_CONTROLLER_NUMBER as _DISK_CONTROLLER_NUMBER
type PDISK_CONTROLLER_NUMBER as _DISK_CONTROLLER_NUMBER ptr

type DISK_CACHE_RETENTION_PRIORITY as long
enum
	EqualPriority
	KeepPrefetchedData
	KeepReadData
end enum

type ___DISK_CACHE_INFORMATION_ScalarPrefetch
	Minimum as WORD
	Maximum as WORD
	MaximumBlocks as WORD
end type

type ___DISK_CACHE_INFORMATION_BlockPrefetch
	Minimum as WORD
	Maximum as WORD
end type

type _DISK_CACHE_INFORMATION
	ParametersSavable as BOOLEAN
	ReadCacheEnabled as BOOLEAN
	WriteCacheEnabled as BOOLEAN
	ReadRetentionPriority as DISK_CACHE_RETENTION_PRIORITY
	WriteRetentionPriority as DISK_CACHE_RETENTION_PRIORITY
	DisablePrefetchTransferLength as WORD
	PrefetchScalar as BOOLEAN

	union
		ScalarPrefetch as ___DISK_CACHE_INFORMATION_ScalarPrefetch
		BlockPrefetch as ___DISK_CACHE_INFORMATION_BlockPrefetch
	end union
end type

type DISK_CACHE_INFORMATION as _DISK_CACHE_INFORMATION
type PDISK_CACHE_INFORMATION as _DISK_CACHE_INFORMATION ptr

type _DISK_GROW_PARTITION
	PartitionNumber as DWORD
	BytesToGrow as LARGE_INTEGER
end type

type DISK_GROW_PARTITION as _DISK_GROW_PARTITION
type PDISK_GROW_PARTITION as _DISK_GROW_PARTITION ptr

#define HIST_NO_OF_BUCKETS 24

type _HISTOGRAM_BUCKET
	Reads as DWORD
	Writes as DWORD
end type

type HISTOGRAM_BUCKET as _HISTOGRAM_BUCKET
type PHISTOGRAM_BUCKET as _HISTOGRAM_BUCKET ptr

#define HISTOGRAM_BUCKET_SIZE sizeof(HISTOGRAM_BUCKET)

type _DISK_HISTOGRAM
	DiskSize as LARGE_INTEGER
	Start as LARGE_INTEGER
	as LARGE_INTEGER End
	Average as LARGE_INTEGER
	AverageRead as LARGE_INTEGER
	AverageWrite as LARGE_INTEGER
	Granularity as DWORD
	Size as DWORD
	ReadCount as DWORD
	WriteCount as DWORD
	Histogram as PHISTOGRAM_BUCKET
end type

type DISK_HISTOGRAM as _DISK_HISTOGRAM
type PDISK_HISTOGRAM as _DISK_HISTOGRAM ptr

#define DISK_HISTOGRAM_SIZE sizeof(DISK_HISTOGRAM)

type _DISK_PERFORMANCE
	BytesRead as LARGE_INTEGER
	BytesWritten as LARGE_INTEGER
	ReadTime as LARGE_INTEGER
	WriteTime as LARGE_INTEGER
	IdleTime as LARGE_INTEGER
	ReadCount as DWORD
	WriteCount as DWORD
	QueueDepth as DWORD
	SplitCount as DWORD
	QueryTime as LARGE_INTEGER
	StorageDeviceNumber as DWORD
	StorageManagerName(0 to 7) as WCHAR
end type

type DISK_PERFORMANCE as _DISK_PERFORMANCE
type PDISK_PERFORMANCE as _DISK_PERFORMANCE ptr

type _DISK_RECORD
	ByteOffset as LARGE_INTEGER
	StartTime as LARGE_INTEGER
	EndTime as LARGE_INTEGER
	VirtualAddress as PVOID
	NumberOfBytes as DWORD
	DeviceNumber as BYTE
	ReadRequest as BOOLEAN
end type

type DISK_RECORD as _DISK_RECORD
type PDISK_RECORD as _DISK_RECORD ptr

type _DISK_LOGGING
	Function as BYTE
	BufferAddress as PVOID
	BufferSize as DWORD
end type

type DISK_LOGGING as _DISK_LOGGING
type PDISK_LOGGING as _DISK_LOGGING ptr

#define DISK_LOGGING_START 0
#define DISK_LOGGING_STOP 1
#define DISK_LOGGING_DUMP 2
#define DISK_BINNING 3

type _BIN_TYPES as long
enum
	RequestSize
	RequestLocation
end enum

type BIN_TYPES as _BIN_TYPES

type _BIN_RANGE
	StartValue as LARGE_INTEGER
	Length as LARGE_INTEGER
end type

type BIN_RANGE as _BIN_RANGE
type PBIN_RANGE as _BIN_RANGE ptr

type _PERF_BIN
	NumberOfBins as DWORD
	TypeOfBin as DWORD
	BinsRanges(0 to 0) as BIN_RANGE
end type

type PERF_BIN as _PERF_BIN
type PPERF_BIN as _PERF_BIN ptr

type _BIN_COUNT
	BinRange as BIN_RANGE
	BinCount as DWORD
end type

type BIN_COUNT as _BIN_COUNT
type PBIN_COUNT as _BIN_COUNT ptr

type _BIN_RESULTS
	NumberOfBins as DWORD
	BinCounts(0 to 0) as BIN_COUNT
end type

type BIN_RESULTS as _BIN_RESULTS
type PBIN_RESULTS as _BIN_RESULTS ptr

type _GETVERSIONINPARAMS field = 1
	bVersion as BYTE
	bRevision as BYTE
	bReserved as BYTE
	bIDEDeviceMap as BYTE
	fCapabilities as DWORD
	dwReserved(0 to 3) as DWORD
end type

type GETVERSIONINPARAMS as _GETVERSIONINPARAMS
type PGETVERSIONINPARAMS as _GETVERSIONINPARAMS ptr
type LPGETVERSIONINPARAMS as _GETVERSIONINPARAMS ptr

type _IDEREGS field = 1
	bFeaturesReg as BYTE
	bSectorCountReg as BYTE
	bSectorNumberReg as BYTE
	bCylLowReg as BYTE
	bCylHighReg as BYTE
	bDriveHeadReg as BYTE
	bCommandReg as BYTE
	bReserved as BYTE
end type

type IDEREGS as _IDEREGS
type PIDEREGS as _IDEREGS ptr
type LPIDEREGS as _IDEREGS ptr

#define CAP_ATA_ID_CMD 1
#define CAP_ATAPI_ID_CMD 2
#define CAP_SMART_CMD 4

type _SENDCMDINPARAMS field = 1
	cBufferSize as DWORD
	irDriveRegs as IDEREGS
	bDriveNumber as BYTE
	bReserved(0 to 2) as BYTE
	dwReserved(0 to 3) as DWORD
	bBuffer(0 to 0) as BYTE
end type

type SENDCMDINPARAMS as _SENDCMDINPARAMS
type PSENDCMDINPARAMS as _SENDCMDINPARAMS ptr
type LPSENDCMDINPARAMS as _SENDCMDINPARAMS ptr

#define ATAPI_ID_CMD &hA1
#define ID_CMD &hEC
#define SMART_CMD &hB0
#define SMART_CYL_LOW &h4F
#define SMART_CYL_HI &hC2

type _DRIVERSTATUS field = 1
	bDriverError as BYTE
	bIDEError as BYTE
	bReserved(0 to 1) as BYTE
	dwReserved(0 to 1) as DWORD
end type

type DRIVERSTATUS as _DRIVERSTATUS
type PDRIVERSTATUS as _DRIVERSTATUS ptr
type LPDRIVERSTATUS as _DRIVERSTATUS ptr

type _SENDCMDOUTPARAMS field = 1
	cBufferSize as DWORD
	DriverStatus as DRIVERSTATUS
	bBuffer(0 to 0) as BYTE
end type

type SENDCMDOUTPARAMS as _SENDCMDOUTPARAMS
type PSENDCMDOUTPARAMS as _SENDCMDOUTPARAMS ptr
type LPSENDCMDOUTPARAMS as _SENDCMDOUTPARAMS ptr

#define SMART_NO_ERROR 0
#define SMART_IDE_ERROR 1
#define SMART_INVALID_FLAG 2
#define SMART_INVALID_COMMAND 3
#define SMART_INVALID_BUFFER 4
#define SMART_INVALID_DRIVE 5
#define SMART_INVALID_IOCTL 6
#define SMART_ERROR_NO_MEM 7
#define SMART_INVALID_REGISTER 8
#define SMART_NOT_SUPPORTED 9
#define SMART_NO_IDE_DEVICE 10
#define SMART_OFFLINE_ROUTINE_OFFLINE 0
#define SMART_SHORT_SELFTEST_OFFLINE 1
#define SMART_EXTENDED_SELFTEST_OFFLINE 2
#define SMART_ABORT_OFFLINE_SELFTEST 127
#define SMART_SHORT_SELFTEST_CAPTIVE 129
#define SMART_EXTENDED_SELFTEST_CAPTIVE 130

type _ELEMENT_TYPE as long
enum
	AllElements
	ChangerTransport
	ChangerSlot
	ChangerIEPort
	ChangerDrive
	ChangerDoor
	ChangerKeypad
	ChangerMaxElement
end enum

type ELEMENT_TYPE as _ELEMENT_TYPE
type PELEMENT_TYPE as _ELEMENT_TYPE ptr

#define READ_ATTRIBUTE_BUFFER_SIZE 512
#define IDENTIFY_BUFFER_SIZE 512
#define READ_THRESHOLD_BUFFER_SIZE 512
#define SMART_LOG_SECTOR_SIZE 512
#define READ_ATTRIBUTES &hD0
#define READ_THRESHOLDS &hD1
#define ENABLE_DISABLE_AUTOSAVE &hD2
#define SAVE_ATTRIBUTE_VALUES &hD3
#define EXECUTE_OFFLINE_DIAGS &hD4
#define SMART_READ_LOG &hD5
#define SMART_WRITE_LOG &hd6
#define ENABLE_SMART &hD8
#define DISABLE_SMART &hD9
#define RETURN_SMART_STATUS &hDA
#define ENABLE_DISABLE_AUTO_OFFLINE &hDB
#define IOCTL_CHANGER_BASE FILE_DEVICE_CHANGER
#define IOCTL_CHANGER_GET_PARAMETERS CTL_CODE(IOCTL_CHANGER_BASE, &h0000, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_GET_STATUS CTL_CODE(IOCTL_CHANGER_BASE, &h0001, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_GET_PRODUCT_DATA CTL_CODE(IOCTL_CHANGER_BASE, &h0002, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_SET_ACCESS CTL_CODE(IOCTL_CHANGER_BASE, &h0004, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_CHANGER_GET_ELEMENT_STATUS CTL_CODE(IOCTL_CHANGER_BASE, &h0005, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS CTL_CODE(IOCTL_CHANGER_BASE, &h0006, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_SET_POSITION CTL_CODE(IOCTL_CHANGER_BASE, &h0007, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_EXCHANGE_MEDIUM CTL_CODE(IOCTL_CHANGER_BASE, &h0008, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_MOVE_MEDIUM CTL_CODE(IOCTL_CHANGER_BASE, &h0009, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_REINITIALIZE_TRANSPORT CTL_CODE(IOCTL_CHANGER_BASE, &h000A, METHOD_BUFFERED, FILE_READ_ACCESS)
#define IOCTL_CHANGER_QUERY_VOLUME_TAGS CTL_CODE(IOCTL_CHANGER_BASE, &h000B, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define MAX_VOLUME_ID_SIZE 36
#define MAX_VOLUME_TEMPLATE_SIZE 40
#define VENDOR_ID_LENGTH 8
#define PRODUCT_ID_LENGTH 16
#define REVISION_LENGTH 4
#define SERIAL_NUMBER_LENGTH 32

type _CHANGER_ELEMENT
	ElementType as ELEMENT_TYPE
	ElementAddress as DWORD
end type

type CHANGER_ELEMENT as _CHANGER_ELEMENT
type PCHANGER_ELEMENT as _CHANGER_ELEMENT ptr

type _CHANGER_ELEMENT_LIST
	Element as CHANGER_ELEMENT
	NumberOfElements as DWORD
end type

type CHANGER_ELEMENT_LIST as _CHANGER_ELEMENT_LIST
type PCHANGER_ELEMENT_LIST as _CHANGER_ELEMENT_LIST ptr

#define CHANGER_BAR_CODE_SCANNER_INSTALLED &h00000001
#define CHANGER_INIT_ELEM_STAT_WITH_RANGE &h00000002
#define CHANGER_CLOSE_IEPORT &h00000004
#define CHANGER_OPEN_IEPORT &h00000008
#define CHANGER_STATUS_NON_VOLATILE &h00000010
#define CHANGER_EXCHANGE_MEDIA &h00000020
#define CHANGER_CLEANER_SLOT &h00000040
#define CHANGER_LOCK_UNLOCK &h00000080
#define CHANGER_CARTRIDGE_MAGAZINE &h00000100
#define CHANGER_MEDIUM_FLIP &h00000200
#define CHANGER_POSITION_TO_ELEMENT &h00000400
#define CHANGER_REPORT_IEPORT_STATE &h00000800
#define CHANGER_STORAGE_DRIVE &h00001000
#define CHANGER_STORAGE_IEPORT &h00002000
#define CHANGER_STORAGE_SLOT &h00004000
#define CHANGER_STORAGE_TRANSPORT &h00008000
#define CHANGER_DRIVE_CLEANING_REQUIRED &h00010000
#define CHANGER_PREDISMOUNT_EJECT_REQUIRED &h00020000
#define CHANGER_CLEANER_ACCESS_NOT_VALID &h00040000
#define CHANGER_PREMOUNT_EJECT_REQUIRED &h00080000
#define CHANGER_VOLUME_IDENTIFICATION &h00100000
#define CHANGER_VOLUME_SEARCH &h00200000
#define CHANGER_VOLUME_ASSERT &h00400000
#define CHANGER_VOLUME_REPLACE &h00800000
#define CHANGER_VOLUME_UNDEFINE &h01000000
#define CHANGER_SERIAL_NUMBER_VALID &h04000000
#define CHANGER_DEVICE_REINITIALIZE_CAPABLE &h08000000
#define CHANGER_KEYPAD_ENABLE_DISABLE &h10000000
#define CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS &h20000000
#define CHANGER_RESERVED_BIT &h80000000
#define CHANGER_PREDISMOUNT_ALIGN_TO_SLOT &h80000001
#define CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE &h80000002
#define CHANGER_CLEANER_AUTODISMOUNT &h80000004
#define CHANGER_TRUE_EXCHANGE_CAPABLE &h80000008
#define CHANGER_SLOTS_USE_TRAYS &h80000010
#define CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR &h80000020
#define CHANGER_CLEANER_OPS_NOT_SUPPORTED &h80000040
#define CHANGER_IEPORT_USER_CONTROL_OPEN &h80000080
#define CHANGER_IEPORT_USER_CONTROL_CLOSE &h80000100
#define CHANGER_MOVE_EXTENDS_IEPORT &h80000200
#define CHANGER_MOVE_RETRACTS_IEPORT &h80000400
#define CHANGER_TO_TRANSPORT &h01
#define CHANGER_TO_SLOT &h02
#define CHANGER_TO_IEPORT &h04
#define CHANGER_TO_DRIVE &h08
#define LOCK_UNLOCK_IEPORT &h01
#define LOCK_UNLOCK_DOOR &h02
#define LOCK_UNLOCK_KEYPAD &h04

type _GET_CHANGER_PARAMETERS
	Size as DWORD
	NumberTransportElements as WORD
	NumberStorageElements as WORD
	NumberCleanerSlots as WORD
	NumberIEElements as WORD
	NumberDataTransferElements as WORD
	NumberOfDoors as WORD
	FirstSlotNumber as WORD
	FirstDriveNumber as WORD
	FirstTransportNumber as WORD
	FirstIEPortNumber as WORD
	FirstCleanerSlotAddress as WORD
	MagazineSize as WORD
	DriveCleanTimeout as DWORD
	Features0 as DWORD
	Features1 as DWORD
	MoveFromTransport as BYTE
	MoveFromSlot as BYTE
	MoveFromIePort as BYTE
	MoveFromDrive as BYTE
	ExchangeFromTransport as BYTE
	ExchangeFromSlot as BYTE
	ExchangeFromIePort as BYTE
	ExchangeFromDrive as BYTE
	LockUnlockCapabilities as BYTE
	PositionCapabilities as BYTE
	Reserved1(0 to 1) as BYTE
	Reserved2(0 to 1) as DWORD
end type

type GET_CHANGER_PARAMETERS as _GET_CHANGER_PARAMETERS
type PGET_CHANGER_PARAMETERS as _GET_CHANGER_PARAMETERS ptr

type _CHANGER_PRODUCT_DATA
	VendorId(0 to 7) as BYTE
	ProductId(0 to 15) as BYTE
	Revision(0 to 3) as BYTE
	SerialNumber(0 to 31) as BYTE
	DeviceType as BYTE
end type

type CHANGER_PRODUCT_DATA as _CHANGER_PRODUCT_DATA
type PCHANGER_PRODUCT_DATA as _CHANGER_PRODUCT_DATA ptr

#define LOCK_ELEMENT 0
#define UNLOCK_ELEMENT 1
#define EXTEND_IEPORT 2
#define RETRACT_IEPORT 3

type _CHANGER_SET_ACCESS
	Element as CHANGER_ELEMENT
	Control as DWORD
end type

type CHANGER_SET_ACCESS as _CHANGER_SET_ACCESS
type PCHANGER_SET_ACCESS as _CHANGER_SET_ACCESS ptr

type _CHANGER_READ_ELEMENT_STATUS
	ElementList as CHANGER_ELEMENT_LIST
	VolumeTagInfo as BOOLEAN
end type

type CHANGER_READ_ELEMENT_STATUS as _CHANGER_READ_ELEMENT_STATUS
type PCHANGER_READ_ELEMENT_STATUS as _CHANGER_READ_ELEMENT_STATUS ptr

type _CHANGER_ELEMENT_STATUS
	Element as CHANGER_ELEMENT
	SrcElementAddress as CHANGER_ELEMENT
	Flags as DWORD
	ExceptionCode as DWORD
	TargetId as BYTE
	Lun as BYTE
	Reserved as WORD
	PrimaryVolumeID(0 to 35) as BYTE
	AlternateVolumeID(0 to 35) as BYTE
end type

type CHANGER_ELEMENT_STATUS as _CHANGER_ELEMENT_STATUS
type PCHANGER_ELEMENT_STATUS as _CHANGER_ELEMENT_STATUS ptr

type _CHANGER_ELEMENT_STATUS_EX
	Element as CHANGER_ELEMENT
	SrcElementAddress as CHANGER_ELEMENT
	Flags as DWORD
	ExceptionCode as DWORD
	TargetId as BYTE
	Lun as BYTE
	Reserved as WORD
	PrimaryVolumeID(0 to 35) as BYTE
	AlternateVolumeID(0 to 35) as BYTE
	VendorIdentification(0 to 7) as BYTE
	ProductIdentification(0 to 15) as BYTE
	SerialNumber(0 to 31) as BYTE
end type

type CHANGER_ELEMENT_STATUS_EX as _CHANGER_ELEMENT_STATUS_EX
type PCHANGER_ELEMENT_STATUS_EX as _CHANGER_ELEMENT_STATUS_EX ptr

#define ELEMENT_STATUS_FULL &h00000001
#define ELEMENT_STATUS_IMPEXP &h00000002
#define ELEMENT_STATUS_EXCEPT &h00000004
#define ELEMENT_STATUS_ACCESS &h00000008
#define ELEMENT_STATUS_EXENAB &h00000010
#define ELEMENT_STATUS_INENAB &h00000020
#define ELEMENT_STATUS_PRODUCT_DATA &h00000040
#define ELEMENT_STATUS_LUN_VALID &h00001000
#define ELEMENT_STATUS_ID_VALID &h00002000
#define ELEMENT_STATUS_NOT_BUS &h00008000
#define ELEMENT_STATUS_INVERT &h00400000
#define ELEMENT_STATUS_SVALID &h00800000
#define ELEMENT_STATUS_PVOLTAG &h10000000
#define ELEMENT_STATUS_AVOLTAG &h20000000
#define ERROR_LABEL_UNREADABLE &h00000001
#define ERROR_LABEL_QUESTIONABLE &h00000002
#define ERROR_SLOT_NOT_PRESENT &h00000004
#define ERROR_DRIVE_NOT_INSTALLED &h00000008
#define ERROR_TRAY_MALFUNCTION &h00000010
#define ERROR_INIT_STATUS_NEEDED &h00000011
#define ERROR_UNHANDLED_ERROR &hFFFFFFFF

type _CHANGER_INITIALIZE_ELEMENT_STATUS
	ElementList as CHANGER_ELEMENT_LIST
	BarCodeScan as BOOLEAN
end type

type CHANGER_INITIALIZE_ELEMENT_STATUS as _CHANGER_INITIALIZE_ELEMENT_STATUS
type PCHANGER_INITIALIZE_ELEMENT_STATUS as _CHANGER_INITIALIZE_ELEMENT_STATUS ptr

type _CHANGER_SET_POSITION
	Transport as CHANGER_ELEMENT
	Destination as CHANGER_ELEMENT
	Flip as BOOLEAN
end type

type CHANGER_SET_POSITION as _CHANGER_SET_POSITION
type PCHANGER_SET_POSITION as _CHANGER_SET_POSITION ptr

type _CHANGER_EXCHANGE_MEDIUM
	Transport as CHANGER_ELEMENT
	Source as CHANGER_ELEMENT
	Destination1 as CHANGER_ELEMENT
	Destination2 as CHANGER_ELEMENT
	Flip1 as BOOLEAN
	Flip2 as BOOLEAN
end type

type CHANGER_EXCHANGE_MEDIUM as _CHANGER_EXCHANGE_MEDIUM
type PCHANGER_EXCHANGE_MEDIUM as _CHANGER_EXCHANGE_MEDIUM ptr

type _CHANGER_MOVE_MEDIUM
	Transport as CHANGER_ELEMENT
	Source as CHANGER_ELEMENT
	Destination as CHANGER_ELEMENT
	Flip as BOOLEAN
end type

type CHANGER_MOVE_MEDIUM as _CHANGER_MOVE_MEDIUM
type PCHANGER_MOVE_MEDIUM as _CHANGER_MOVE_MEDIUM ptr

type _CHANGER_SEND_VOLUME_TAG_INFORMATION
	StartingElement as CHANGER_ELEMENT
	ActionCode as DWORD
	VolumeIDTemplate(0 to 39) as BYTE
end type

type CHANGER_SEND_VOLUME_TAG_INFORMATION as _CHANGER_SEND_VOLUME_TAG_INFORMATION
type PCHANGER_SEND_VOLUME_TAG_INFORMATION as _CHANGER_SEND_VOLUME_TAG_INFORMATION ptr

type _READ_ELEMENT_ADDRESS_INFO
	NumberOfElements as DWORD
	ElementStatus(0 to 0) as CHANGER_ELEMENT_STATUS
end type

type READ_ELEMENT_ADDRESS_INFO as _READ_ELEMENT_ADDRESS_INFO
type PREAD_ELEMENT_ADDRESS_INFO as _READ_ELEMENT_ADDRESS_INFO ptr

#define SEARCH_ALL &h0
#define SEARCH_PRIMARY &h1
#define SEARCH_ALTERNATE &h2
#define SEARCH_ALL_NO_SEQ &h4
#define SEARCH_PRI_NO_SEQ &h5
#define SEARCH_ALT_NO_SEQ &h6
#define ASSERT_PRIMARY &h8
#define ASSERT_ALTERNATE &h9
#define REPLACE_PRIMARY &hA
#define REPLACE_ALTERNATE &hB
#define UNDEFINE_PRIMARY &hC
#define UNDEFINE_ALTERNATE &hD

type _CHANGER_DEVICE_PROBLEM_TYPE as long
enum
	DeviceProblemNone
	DeviceProblemHardware
	DeviceProblemCHMError
	DeviceProblemDoorOpen
	DeviceProblemCalibrationError
	DeviceProblemTargetFailure
	DeviceProblemCHMMoveError
	DeviceProblemCHMZeroError
	DeviceProblemCartridgeInsertError
	DeviceProblemPositionError
	DeviceProblemSensorError
	DeviceProblemCartridgeEjectError
	DeviceProblemGripperError
	DeviceProblemDriveError
end enum

type CHANGER_DEVICE_PROBLEM_TYPE as _CHANGER_DEVICE_PROBLEM_TYPE
type PCHANGER_DEVICE_PROBLEM_TYPE as _CHANGER_DEVICE_PROBLEM_TYPE ptr

#define IOCTL_SERIAL_LSRMST_INSERT CTL_CODE(FILE_DEVICE_SERIAL_PORT, 31, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_SERENUM_EXPOSE_HARDWARE CTL_CODE(FILE_DEVICE_SERENUM, 128, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_SERENUM_REMOVE_HARDWARE CTL_CODE(FILE_DEVICE_SERENUM, 129, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_SERENUM_PORT_DESC CTL_CODE(FILE_DEVICE_SERENUM, 130, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_SERENUM_GET_PORT_NAME CTL_CODE(FILE_DEVICE_SERENUM, 131, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define SERIAL_LSRMST_ESCAPE cast(BYTE, &h00)
#define SERIAL_LSRMST_LSR_DATA cast(BYTE, &h01)
#define SERIAL_LSRMST_LSR_NODATA cast(BYTE, &h02)
#define SERIAL_LSRMST_MST cast(BYTE, &h03)
#define SERIAL_IOC_FCR_FIFO_ENABLE cast(DWORD, &h00000001)
#define SERIAL_IOC_FCR_RCVR_RESET cast(DWORD, &h00000002)
#define SERIAL_IOC_FCR_XMIT_RESET cast(DWORD, &h00000004)
#define SERIAL_IOC_FCR_DMA_MODE cast(DWORD, &h00000008)
#define SERIAL_IOC_FCR_RES1 cast(DWORD, &h00000010)
#define SERIAL_IOC_FCR_RES2 cast(DWORD, &h00000020)
#define SERIAL_IOC_FCR_RCVR_TRIGGER_LSB cast(DWORD, &h00000040)
#define SERIAL_IOC_FCR_RCVR_TRIGGER_MSB cast(DWORD, &h00000080)
#define SERIAL_IOC_MCR_DTR cast(DWORD, &h00000001)
#define SERIAL_IOC_MCR_RTS cast(DWORD, &h00000002)
#define SERIAL_IOC_MCR_OUT1 cast(DWORD, &h00000004)
#define SERIAL_IOC_MCR_OUT2 cast(DWORD, &h00000008)
#define SERIAL_IOC_MCR_LOOP cast(DWORD, &h00000010)
#define _FILESYSTEMFSCTL_
#define FSCTL_REQUEST_OPLOCK_LEVEL_1 CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 0, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_REQUEST_OPLOCK_LEVEL_2 CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 1, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_REQUEST_BATCH_OPLOCK CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 2, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_OPLOCK_BREAK_ACKNOWLEDGE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 3, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_OPBATCH_ACK_CLOSE_PENDING CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 4, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_OPLOCK_BREAK_NOTIFY CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 5, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_LOCK_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 6, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_UNLOCK_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 7, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_DISMOUNT_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 8, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_IS_VOLUME_MOUNTED CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 10, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_IS_PATHNAME_VALID CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 11, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_MARK_VOLUME_DIRTY CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 12, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_QUERY_RETRIEVAL_POINTERS CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 14, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_GET_COMPRESSION CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 15, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_SET_COMPRESSION CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 16, METHOD_BUFFERED, FILE_READ_DATA or FILE_WRITE_DATA)
#define FSCTL_MARK_AS_SYSTEM_HIVE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 19, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_OPLOCK_BREAK_ACK_NO_2 CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 20, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_INVALIDATE_VOLUMES CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 21, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_QUERY_FAT_BPB CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 22, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_REQUEST_FILTER_OPLOCK CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 23, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_FILESYSTEM_GET_STATISTICS CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 24, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_GET_NTFS_VOLUME_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 25, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_GET_NTFS_FILE_RECORD CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 26, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_GET_VOLUME_BITMAP CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 27, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_GET_RETRIEVAL_POINTERS CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 28, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_MOVE_FILE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 29, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_IS_VOLUME_DIRTY CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 30, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_ALLOW_EXTENDED_DASD_IO CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 32, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_FIND_FILES_BY_SID CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 35, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_SET_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 38, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_GET_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 39, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_DELETE_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 40, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_SET_REPARSE_POINT CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 41, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_GET_REPARSE_POINT CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 42, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_DELETE_REPARSE_POINT CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 43, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_ENUM_USN_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 44, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_SECURITY_ID_CHECK CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 45, METHOD_NEITHER, FILE_READ_DATA)
#define FSCTL_READ_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 46, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_SET_OBJECT_ID_EXTENDED CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 47, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_CREATE_OR_GET_OBJECT_ID CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 48, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_SET_SPARSE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 49, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)
#define FSCTL_SET_ZERO_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 50, METHOD_BUFFERED, FILE_WRITE_DATA)
#define FSCTL_QUERY_ALLOCATED_RANGES CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 51, METHOD_NEITHER, FILE_READ_DATA)
#define FSCTL_SET_ENCRYPTION CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 53, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_ENCRYPTION_FSCTL_IO CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 54, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_WRITE_RAW_ENCRYPTED CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 55, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define FSCTL_READ_RAW_ENCRYPTED CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 56, METHOD_NEITHER, FILE_SPECIAL_ACCESS)
#define FSCTL_CREATE_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 57, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_READ_FILE_USN_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 58, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_WRITE_USN_CLOSE_RECORD CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 59, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_EXTEND_VOLUME CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 60, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_QUERY_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 61, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_DELETE_USN_JOURNAL CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 62, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_MARK_HANDLE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 63, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_SIS_COPYFILE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 64, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define FSCTL_SIS_LINK_FILES CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 65, METHOD_BUFFERED, FILE_READ_DATA or FILE_WRITE_DATA)
#define FSCTL_HSM_MSG CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 66, METHOD_BUFFERED, FILE_READ_DATA or FILE_WRITE_DATA)
#define FSCTL_HSM_DATA CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 68, METHOD_NEITHER, FILE_READ_DATA or FILE_WRITE_DATA)
#define FSCTL_RECALL_FILE CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 69, METHOD_NEITHER, FILE_ANY_ACCESS)
#define FSCTL_READ_FROM_PLEX CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 71, METHOD_OUT_DIRECT, FILE_READ_DATA)
#define FSCTL_FILE_PREFETCH CTL_CODE(FILE_DEVICE_FILE_SYSTEM, 72, METHOD_BUFFERED, FILE_SPECIAL_ACCESS)

type _PATHNAME_BUFFER
	PathNameLength as DWORD
	Name(0 to 0) as WCHAR
end type

type PATHNAME_BUFFER as _PATHNAME_BUFFER
type PPATHNAME_BUFFER as _PATHNAME_BUFFER ptr

type _FSCTL_QUERY_FAT_BPB_BUFFER
	First0x24BytesOfBootSector(0 to 35) as BYTE
end type

type FSCTL_QUERY_FAT_BPB_BUFFER as _FSCTL_QUERY_FAT_BPB_BUFFER
type PFSCTL_QUERY_FAT_BPB_BUFFER as _FSCTL_QUERY_FAT_BPB_BUFFER ptr

type NTFS_VOLUME_DATA_BUFFER
	VolumeSerialNumber as LARGE_INTEGER
	NumberSectors as LARGE_INTEGER
	TotalClusters as LARGE_INTEGER
	FreeClusters as LARGE_INTEGER
	TotalReserved as LARGE_INTEGER
	BytesPerSector as DWORD
	BytesPerCluster as DWORD
	BytesPerFileRecordSegment as DWORD
	ClustersPerFileRecordSegment as DWORD
	MftValidDataLength as LARGE_INTEGER
	MftStartLcn as LARGE_INTEGER
	Mft2StartLcn as LARGE_INTEGER
	MftZoneStart as LARGE_INTEGER
	MftZoneEnd as LARGE_INTEGER
end type

type PNTFS_VOLUME_DATA_BUFFER as NTFS_VOLUME_DATA_BUFFER ptr

type NTFS_EXTENDED_VOLUME_DATA
	ByteCount as DWORD
	MajorVersion as WORD
	MinorVersion as WORD
end type

type PNTFS_EXTENDED_VOLUME_DATA as NTFS_EXTENDED_VOLUME_DATA ptr

type STARTING_LCN_INPUT_BUFFER
	StartingLcn as LARGE_INTEGER
end type

type PSTARTING_LCN_INPUT_BUFFER as STARTING_LCN_INPUT_BUFFER ptr

type VOLUME_BITMAP_BUFFER
	StartingLcn as LARGE_INTEGER
	BitmapSize as LARGE_INTEGER
	Buffer(0 to 0) as BYTE
end type

type PVOLUME_BITMAP_BUFFER as VOLUME_BITMAP_BUFFER ptr

type STARTING_VCN_INPUT_BUFFER
	StartingVcn as LARGE_INTEGER
end type

type PSTARTING_VCN_INPUT_BUFFER as STARTING_VCN_INPUT_BUFFER ptr

type __RETRIEVAL_POINTERS_BUFFER_Extents
	NextVcn as LARGE_INTEGER
	Lcn as LARGE_INTEGER
end type

type RETRIEVAL_POINTERS_BUFFER
	ExtentCount as DWORD
	StartingVcn as LARGE_INTEGER
	Extents(0 to 0) as __RETRIEVAL_POINTERS_BUFFER_Extents
end type

type PRETRIEVAL_POINTERS_BUFFER as RETRIEVAL_POINTERS_BUFFER ptr

type NTFS_FILE_RECORD_INPUT_BUFFER
	FileReferenceNumber as LARGE_INTEGER
end type

type PNTFS_FILE_RECORD_INPUT_BUFFER as NTFS_FILE_RECORD_INPUT_BUFFER ptr

type NTFS_FILE_RECORD_OUTPUT_BUFFER
	FileReferenceNumber as LARGE_INTEGER
	FileRecordLength as DWORD
	FileRecordBuffer(0 to 0) as BYTE
end type

type PNTFS_FILE_RECORD_OUTPUT_BUFFER as NTFS_FILE_RECORD_OUTPUT_BUFFER ptr

type MOVE_FILE_DATA
	FileHandle as HANDLE
	StartingVcn as LARGE_INTEGER
	StartingLcn as LARGE_INTEGER
	ClusterCount as DWORD
end type

type PMOVE_FILE_DATA as MOVE_FILE_DATA ptr

#ifdef __FB_64BIT__
	type _MOVE_FILE_DATA32
		FileHandle as UINT32
		StartingVcn as LARGE_INTEGER
		StartingLcn as LARGE_INTEGER
		ClusterCount as DWORD
	end type

	type MOVE_FILE_DATA32 as _MOVE_FILE_DATA32
	type PMOVE_FILE_DATA32 as _MOVE_FILE_DATA32 ptr
#endif

type FIND_BY_SID_DATA
	Restart as DWORD
	Sid as SID
end type

type PFIND_BY_SID_DATA as FIND_BY_SID_DATA ptr

type FIND_BY_SID_OUTPUT
	NextEntryOffset as DWORD
	FileIndex as DWORD
	FileNameLength as DWORD
	FileName(0 to 0) as WCHAR
end type

type PFIND_BY_SID_OUTPUT as FIND_BY_SID_OUTPUT ptr

type MFT_ENUM_DATA
	StartFileReferenceNumber as DWORDLONG
	LowUsn as USN
	HighUsn as USN
end type

type PMFT_ENUM_DATA as MFT_ENUM_DATA ptr

type CREATE_USN_JOURNAL_DATA
	MaximumSize as DWORDLONG
	AllocationDelta as DWORDLONG
end type

type PCREATE_USN_JOURNAL_DATA as CREATE_USN_JOURNAL_DATA ptr

type READ_USN_JOURNAL_DATA
	StartUsn as USN
	ReasonMask as DWORD
	ReturnOnlyOnClose as DWORD
	Timeout as DWORDLONG
	BytesToWaitFor as DWORDLONG
	UsnJournalID as DWORDLONG
end type

type PREAD_USN_JOURNAL_DATA as READ_USN_JOURNAL_DATA ptr

type USN_RECORD
	RecordLength as DWORD
	MajorVersion as WORD
	MinorVersion as WORD
	FileReferenceNumber as DWORDLONG
	ParentFileReferenceNumber as DWORDLONG
	Usn as USN
	TimeStamp as LARGE_INTEGER
	Reason as DWORD
	SourceInfo as DWORD
	SecurityId as DWORD
	FileAttributes as DWORD
	FileNameLength as WORD
	FileNameOffset as WORD
	FileName(0 to 0) as WCHAR
end type

type PUSN_RECORD as USN_RECORD ptr

#define USN_PAGE_SIZE &h1000
#define USN_REASON_DATA_OVERWRITE &h00000001
#define USN_REASON_DATA_EXTEND &h00000002
#define USN_REASON_DATA_TRUNCATION &h00000004
#define USN_REASON_NAMED_DATA_OVERWRITE &h00000010
#define USN_REASON_NAMED_DATA_EXTEND &h00000020
#define USN_REASON_NAMED_DATA_TRUNCATION &h00000040
#define USN_REASON_FILE_CREATE &h00000100
#define USN_REASON_FILE_DELETE &h00000200
#define USN_REASON_EA_CHANGE &h00000400
#define USN_REASON_SECURITY_CHANGE &h00000800
#define USN_REASON_RENAME_OLD_NAME &h00001000
#define USN_REASON_RENAME_NEW_NAME &h00002000
#define USN_REASON_INDEXABLE_CHANGE &h00004000
#define USN_REASON_BASIC_INFO_CHANGE &h00008000
#define USN_REASON_HARD_LINK_CHANGE &h00010000
#define USN_REASON_COMPRESSION_CHANGE &h00020000
#define USN_REASON_ENCRYPTION_CHANGE &h00040000
#define USN_REASON_OBJECT_ID_CHANGE &h00080000
#define USN_REASON_REPARSE_POINT_CHANGE &h00100000
#define USN_REASON_STREAM_CHANGE &h00200000
#define USN_REASON_CLOSE &h80000000

type USN_JOURNAL_DATA
	UsnJournalID as DWORDLONG
	FirstUsn as USN
	NextUsn as USN
	LowestValidUsn as USN
	MaxUsn as USN
	MaximumSize as DWORDLONG
	AllocationDelta as DWORDLONG
end type

type PUSN_JOURNAL_DATA as USN_JOURNAL_DATA ptr

type DELETE_USN_JOURNAL_DATA
	UsnJournalID as DWORDLONG
	DeleteFlags as DWORD
end type

type PDELETE_USN_JOURNAL_DATA as DELETE_USN_JOURNAL_DATA ptr

#define USN_DELETE_FLAG_DELETE &h00000001
#define USN_DELETE_FLAG_NOTIFY &h00000002
#define USN_DELETE_VALID_FLAGS &h00000003

type MARK_HANDLE_INFO
	UsnSourceInfo as DWORD
	VolumeHandle as HANDLE
	HandleInfo as DWORD
end type

type PMARK_HANDLE_INFO as MARK_HANDLE_INFO ptr

#ifdef __FB_64BIT__
	type MARK_HANDLE_INFO32
		UsnSourceInfo as DWORD
		VolumeHandle as UINT32
		HandleInfo as DWORD
	end type

	type PMARK_HANDLE_INFO32 as MARK_HANDLE_INFO32 ptr
#endif

#define USN_SOURCE_DATA_MANAGEMENT &h00000001
#define USN_SOURCE_AUXILIARY_DATA &h00000002
#define USN_SOURCE_REPLICATION_MANAGEMENT &h00000004
#define MARK_HANDLE_PROTECT_CLUSTERS &h00000001
#define MARK_HANDLE_TXF_SYSTEM_LOG &h00000004
#define MARK_HANDLE_NOT_TXF_SYSTEM_LOG &h00000008
#define MARK_HANDLE_REALTIME &h00000020
#define MARK_HANDLE_NOT_REALTIME &h00000040

type BULK_SECURITY_TEST_DATA
	DesiredAccess as ACCESS_MASK
	SecurityIds(0 to 0) as DWORD
end type

type PBULK_SECURITY_TEST_DATA as BULK_SECURITY_TEST_DATA ptr

#define VOLUME_IS_DIRTY &h00000001
#define VOLUME_UPGRADE_SCHEDULED &h00000002

type _FILE_PREFETCH
	as DWORD Type
	Count as DWORD
	Prefetch(0 to 0) as DWORDLONG
end type

type FILE_PREFETCH as _FILE_PREFETCH
type PFILE_PREFETCH as _FILE_PREFETCH ptr

#define FILE_PREFETCH_TYPE_FOR_CREATE &h1

type _FILESYSTEM_STATISTICS
	FileSystemType as WORD
	Version as WORD
	SizeOfCompleteStructure as DWORD
	UserFileReads as DWORD
	UserFileReadBytes as DWORD
	UserDiskReads as DWORD
	UserFileWrites as DWORD
	UserFileWriteBytes as DWORD
	UserDiskWrites as DWORD
	MetaDataReads as DWORD
	MetaDataReadBytes as DWORD
	MetaDataDiskReads as DWORD
	MetaDataWrites as DWORD
	MetaDataWriteBytes as DWORD
	MetaDataDiskWrites as DWORD
end type

type FILESYSTEM_STATISTICS as _FILESYSTEM_STATISTICS
type PFILESYSTEM_STATISTICS as _FILESYSTEM_STATISTICS ptr

#define FILESYSTEM_STATISTICS_TYPE_NTFS 1
#define FILESYSTEM_STATISTICS_TYPE_FAT 2

type _FAT_STATISTICS
	CreateHits as DWORD
	SuccessfulCreates as DWORD
	FailedCreates as DWORD
	NonCachedReads as DWORD
	NonCachedReadBytes as DWORD
	NonCachedWrites as DWORD
	NonCachedWriteBytes as DWORD
	NonCachedDiskReads as DWORD
	NonCachedDiskWrites as DWORD
end type

type FAT_STATISTICS as _FAT_STATISTICS
type PFAT_STATISTICS as _FAT_STATISTICS ptr

type _EXFAT_STATISTICS
	CreateHits as DWORD
	SuccessfulCreates as DWORD
	FailedCreates as DWORD
	NonCachedReads as DWORD
	NonCachedReadBytes as DWORD
	NonCachedWrites as DWORD
	NonCachedWriteBytes as DWORD
	NonCachedDiskReads as DWORD
	NonCachedDiskWrites as DWORD
end type

type EXFAT_STATISTICS as _EXFAT_STATISTICS
type PEXFAT_STATISTICS as _EXFAT_STATISTICS ptr

type ___NTFS_STATISTICS_MftWritesUserLevel
	Write as WORD
	Create as WORD
	SetInfo as WORD
	Flush as WORD
end type

type ___NTFS_STATISTICS_Mft2WritesUserLevel
	Write as WORD
	Create as WORD
	SetInfo as WORD
	Flush as WORD
end type

type ___NTFS_STATISTICS_BitmapWritesUserLevel
	Write as WORD
	Create as WORD
	SetInfo as WORD
end type

type ___NTFS_STATISTICS_MftBitmapWritesUserLevel
	Write as WORD
	Create as WORD
	SetInfo as WORD
	Flush as WORD
end type

type ___NTFS_STATISTICS_Allocate
	Calls as DWORD
	Clusters as DWORD
	Hints as DWORD
	RunsReturned as DWORD
	HintsHonored as DWORD
	HintsClusters as DWORD
	Cache as DWORD
	CacheClusters as DWORD
	CacheMiss as DWORD
	CacheMissClusters as DWORD
end type

type _NTFS_STATISTICS
	LogFileFullExceptions as DWORD
	OtherExceptions as DWORD
	MftReads as DWORD
	MftReadBytes as DWORD
	MftWrites as DWORD
	MftWriteBytes as DWORD
	MftWritesUserLevel as ___NTFS_STATISTICS_MftWritesUserLevel
	MftWritesFlushForLogFileFull as WORD
	MftWritesLazyWriter as WORD
	MftWritesUserRequest as WORD
	Mft2Writes as DWORD
	Mft2WriteBytes as DWORD
	Mft2WritesUserLevel as ___NTFS_STATISTICS_Mft2WritesUserLevel
	Mft2WritesFlushForLogFileFull as WORD
	Mft2WritesLazyWriter as WORD
	Mft2WritesUserRequest as WORD
	RootIndexReads as DWORD
	RootIndexReadBytes as DWORD
	RootIndexWrites as DWORD
	RootIndexWriteBytes as DWORD
	BitmapReads as DWORD
	BitmapReadBytes as DWORD
	BitmapWrites as DWORD
	BitmapWriteBytes as DWORD
	BitmapWritesFlushForLogFileFull as WORD
	BitmapWritesLazyWriter as WORD
	BitmapWritesUserRequest as WORD
	BitmapWritesUserLevel as ___NTFS_STATISTICS_BitmapWritesUserLevel
	MftBitmapReads as DWORD
	MftBitmapReadBytes as DWORD
	MftBitmapWrites as DWORD
	MftBitmapWriteBytes as DWORD
	MftBitmapWritesFlushForLogFileFull as WORD
	MftBitmapWritesLazyWriter as WORD
	MftBitmapWritesUserRequest as WORD
	MftBitmapWritesUserLevel as ___NTFS_STATISTICS_MftBitmapWritesUserLevel
	UserIndexReads as DWORD
	UserIndexReadBytes as DWORD
	UserIndexWrites as DWORD
	UserIndexWriteBytes as DWORD
	LogFileReads as DWORD
	LogFileReadBytes as DWORD
	LogFileWrites as DWORD
	LogFileWriteBytes as DWORD
	Allocate as ___NTFS_STATISTICS_Allocate
end type

type NTFS_STATISTICS as _NTFS_STATISTICS
type PNTFS_STATISTICS as _NTFS_STATISTICS ptr

type _FILE_OBJECTID_BUFFER
	ObjectId(0 to 15) as BYTE

	union
		type
			BirthVolumeId(0 to 15) as BYTE
			BirthObjectId(0 to 15) as BYTE
			DomainId(0 to 15) as BYTE
		end type

		ExtendedInfo(0 to 47) as BYTE
	end union
end type

type FILE_OBJECTID_BUFFER as _FILE_OBJECTID_BUFFER
type PFILE_OBJECTID_BUFFER as _FILE_OBJECTID_BUFFER ptr

type _FILE_SET_SPARSE_BUFFER
	SetSparse as BOOLEAN
end type

type FILE_SET_SPARSE_BUFFER as _FILE_SET_SPARSE_BUFFER
type PFILE_SET_SPARSE_BUFFER as _FILE_SET_SPARSE_BUFFER ptr

type _FILE_ZERO_DATA_INFORMATION
	FileOffset as LARGE_INTEGER
	BeyondFinalZero as LARGE_INTEGER
end type

type FILE_ZERO_DATA_INFORMATION as _FILE_ZERO_DATA_INFORMATION
type PFILE_ZERO_DATA_INFORMATION as _FILE_ZERO_DATA_INFORMATION ptr

type _FILE_ALLOCATED_RANGE_BUFFER
	FileOffset as LARGE_INTEGER
	Length as LARGE_INTEGER
end type

type FILE_ALLOCATED_RANGE_BUFFER as _FILE_ALLOCATED_RANGE_BUFFER
type PFILE_ALLOCATED_RANGE_BUFFER as _FILE_ALLOCATED_RANGE_BUFFER ptr

type _ENCRYPTION_BUFFER
	EncryptionOperation as DWORD
	as BYTE Private(0 to 0)
end type

type ENCRYPTION_BUFFER as _ENCRYPTION_BUFFER
type PENCRYPTION_BUFFER as _ENCRYPTION_BUFFER ptr

#define FILE_SET_ENCRYPTION &h00000001
#define FILE_CLEAR_ENCRYPTION &h00000002
#define STREAM_SET_ENCRYPTION &h00000003
#define STREAM_CLEAR_ENCRYPTION &h00000004
#define MAXIMUM_ENCRYPTION_VALUE &h00000004

type _DECRYPTION_STATUS_BUFFER
	NoEncryptedStreams as BOOLEAN
end type

type DECRYPTION_STATUS_BUFFER as _DECRYPTION_STATUS_BUFFER
type PDECRYPTION_STATUS_BUFFER as _DECRYPTION_STATUS_BUFFER ptr

#define ENCRYPTION_FORMAT_DEFAULT &h01
#define COMPRESSION_FORMAT_SPARSE &h4000

type _REQUEST_RAW_ENCRYPTED_DATA
	FileOffset as LONGLONG
	Length as DWORD
end type

type REQUEST_RAW_ENCRYPTED_DATA as _REQUEST_RAW_ENCRYPTED_DATA
type PREQUEST_RAW_ENCRYPTED_DATA as _REQUEST_RAW_ENCRYPTED_DATA ptr

type _ENCRYPTED_DATA_INFO
	StartingFileOffset as DWORDLONG
	OutputBufferOffset as DWORD
	BytesWithinFileSize as DWORD
	BytesWithinValidDataLength as DWORD
	CompressionFormat as WORD
	DataUnitShift as BYTE
	ChunkShift as BYTE
	ClusterShift as BYTE
	EncryptionFormat as BYTE
	NumberOfDataBlocks as WORD
	DataBlockSize(0 to 0) as DWORD
end type

type ENCRYPTED_DATA_INFO as _ENCRYPTED_DATA_INFO
type PENCRYPTED_DATA_INFO as ENCRYPTED_DATA_INFO ptr

type _PLEX_READ_DATA_REQUEST
	ByteOffset as LARGE_INTEGER
	ByteLength as DWORD
	PlexNumber as DWORD
end type

type PLEX_READ_DATA_REQUEST as _PLEX_READ_DATA_REQUEST
type PPLEX_READ_DATA_REQUEST as _PLEX_READ_DATA_REQUEST ptr

type _SI_COPYFILE
	SourceFileNameLength as DWORD
	DestinationFileNameLength as DWORD
	Flags as DWORD
	FileNameBuffer(0 to 0) as WCHAR
end type

type SI_COPYFILE as _SI_COPYFILE
type PSI_COPYFILE as _SI_COPYFILE ptr

#define COPYFILE_SIS_LINK &h0001
#define COPYFILE_SIS_REPLACE &h0002
#define COPYFILE_SIS_FLAGS &h0003

type _STORAGE_DESCRIPTOR_HEADER
	Version as DWORD
	Size as DWORD
end type

type STORAGE_DESCRIPTOR_HEADER as _STORAGE_DESCRIPTOR_HEADER
type PSTORAGE_DESCRIPTOR_HEADER as _STORAGE_DESCRIPTOR_HEADER ptr

type _STORAGE_PROPERTY_ID as long
enum
	StorageDeviceProperty = 0
	StorageAdapterProperty = 1
	StorageDeviceIdProperty = 2
	StorageDeviceUniqueIdProperty = 3
	StorageDeviceWriteCacheProperty = 4
	StorageMiniportProperty = 5
	StorageAccessAlignmentProperty = 6
	StorageDeviceSeekPenaltyProperty = 7
	StorageDeviceTrimProperty = 8
end enum

type STORAGE_PROPERTY_ID as _STORAGE_PROPERTY_ID
type PSTORAGE_PROPERTY_ID as _STORAGE_PROPERTY_ID ptr

type _STORAGE_QUERY_TYPE as long
enum
	PropertyStandardQuery = 0
	PropertyExistsQuery = 1
	PropertyMaskQuery = 2
	PropertyQueryMaxDefined = 3
end enum

type STORAGE_QUERY_TYPE as _STORAGE_QUERY_TYPE
type PSTORAGE_QUERY_TYPE as _STORAGE_QUERY_TYPE ptr

type _STORAGE_PROPERTY_QUERY
	PropertyId as STORAGE_PROPERTY_ID
	QueryType as STORAGE_QUERY_TYPE
	AdditionalParameters(0 to 0) as BYTE
end type

type STORAGE_PROPERTY_QUERY as _STORAGE_PROPERTY_QUERY
type PSTORAGE_PROPERTY_QUERY as _STORAGE_PROPERTY_QUERY ptr

type _STORAGE_DEVICE_DESCRIPTOR
	Version as DWORD
	Size as DWORD
	DeviceType as BYTE
	DeviceTypeModifier as BYTE
	RemovableMedia as BOOLEAN
	CommandQueueing as BOOLEAN
	VendorIdOffset as DWORD
	ProductIdOffset as DWORD
	ProductRevisionOffset as DWORD
	SerialNumberOffset as DWORD
	BusType as STORAGE_BUS_TYPE
	RawPropertiesLength as DWORD
	RawDeviceProperties(0 to 0) as BYTE
end type

type STORAGE_DEVICE_DESCRIPTOR as _STORAGE_DEVICE_DESCRIPTOR
type PSTORAGE_DEVICE_DESCRIPTOR as _STORAGE_DEVICE_DESCRIPTOR ptr

type _STORAGE_ADAPTER_DESCRIPTOR
	Version as DWORD
	Size as DWORD
	MaximumTransferLength as DWORD
	MaximumPhysicalPages as DWORD
	AlignmentMask as DWORD
	AdapterUsesPio as BOOLEAN
	AdapterScansDown as BOOLEAN
	CommandQueueing as BOOLEAN
	AcceleratedTransfer as BOOLEAN
	BusType as BYTE
	BusMajorVersion as WORD
	BusMinorVersion as WORD
end type

type STORAGE_ADAPTER_DESCRIPTOR as _STORAGE_ADAPTER_DESCRIPTOR
type PSTORAGE_ADAPTER_DESCRIPTOR as _STORAGE_ADAPTER_DESCRIPTOR ptr

type _STORAGE_DEVICE_ID_DESCRIPTOR
	Version as DWORD
	Size as DWORD
	NumberOfIdentifiers as DWORD
	Identifiers(0 to 0) as BYTE
end type

type STORAGE_DEVICE_ID_DESCRIPTOR as _STORAGE_DEVICE_ID_DESCRIPTOR
type PSTORAGE_DEVICE_ID_DESCRIPTOR as _STORAGE_DEVICE_ID_DESCRIPTOR ptr

type _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION
	GptAttributes as ULONGLONG
end type

type VOLUME_GET_GPT_ATTRIBUTES_INFORMATION as _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION
type PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION as _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION ptr

#define IOCTL_VOLUME_BASE cast(DWORD, asc("V"))
#define IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS CTL_CODE(IOCTL_VOLUME_BASE, 0, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE CTL_CODE(IOCTL_VOLUME_BASE, 1, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_ONLINE CTL_CODE(IOCTL_VOLUME_BASE, 2, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_VOLUME_OFFLINE CTL_CODE(IOCTL_VOLUME_BASE, 3, METHOD_BUFFERED, FILE_READ_ACCESS or FILE_WRITE_ACCESS)
#define IOCTL_VOLUME_IS_OFFLINE CTL_CODE(IOCTL_VOLUME_BASE, 4, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_IS_IO_CAPABLE CTL_CODE(IOCTL_VOLUME_BASE, 5, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_QUERY_FAILOVER_SET CTL_CODE(IOCTL_VOLUME_BASE, 6, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_QUERY_VOLUME_NUMBER CTL_CODE(IOCTL_VOLUME_BASE, 7, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_LOGICAL_TO_PHYSICAL CTL_CODE(IOCTL_VOLUME_BASE, 8, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_PHYSICAL_TO_LOGICAL CTL_CODE(IOCTL_VOLUME_BASE, 9, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_IS_CLUSTERED CTL_CODE(IOCTL_VOLUME_BASE, 12, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_VOLUME_GET_GPT_ATTRIBUTES CTL_CODE(IOCTL_VOLUME_BASE, 14, METHOD_BUFFERED, FILE_ANY_ACCESS)

type _DISK_EXTENT
	DiskNumber as DWORD
	StartingOffset as LARGE_INTEGER
	ExtentLength as LARGE_INTEGER
end type

type DISK_EXTENT as _DISK_EXTENT
type PDISK_EXTENT as _DISK_EXTENT ptr

type _VOLUME_DISK_EXTENTS
	NumberOfDiskExtents as DWORD
	Extents(0 to 0) as DISK_EXTENT
end type

type VOLUME_DISK_EXTENTS as _VOLUME_DISK_EXTENTS
type PVOLUME_DISK_EXTENTS as _VOLUME_DISK_EXTENTS ptr

end extern
